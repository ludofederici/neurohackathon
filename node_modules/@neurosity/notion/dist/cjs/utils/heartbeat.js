"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const rxjs_1 = require("rxjs");
const operators_1 = require("rxjs/operators");
// `lastHeartbeat` is updated every 30 seconds via os
const lastHeartbeatUpdateInterval = 30000;
const maxHeartbeatsSkipped = 3;
const gracePeriod = 5000;
// 65 seconds
const lostHeartbeatThreshold = lastHeartbeatUpdateInterval * maxHeartbeatsSkipped + gracePeriod;
function offlineIfLostHeartbeat() {
    return rxjs_1.pipe(operators_1.switchMap((status) => rxjs_1.timer(0, lostHeartbeatThreshold).pipe(operators_1.map(() => {
        if (deviceHasLostHeartbeat(status)) {
            return Object.assign(Object.assign({}, status), { state: "offline" });
        }
        return status;
    }))), operators_1.distinctUntilChanged(didObjectChange));
}
exports.offlineIfLostHeartbeat = offlineIfLostHeartbeat;
function deviceHasLostHeartbeat(status) {
    if (!("lastHeartbeat" in status)) {
        return false;
    }
    const { lastHeartbeat } = status;
    const timeSinceLastHeartbeat = Date.now() - lastHeartbeat;
    const lostHeartbeat = timeSinceLastHeartbeat > lostHeartbeatThreshold;
    return lostHeartbeat;
}
exports.deviceHasLostHeartbeat = deviceHasLostHeartbeat;
function didObjectChange(a, b) {
    return (JSON.stringify(a).split("").sort().join("") ===
        JSON.stringify(b).split("").sort().join(""));
}
