{"ast":null,"code":"var _jsxFileName = \"/Users/ludofederici/neurohackathon/src/pages/Devices.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { notion, useNotion } from \"../services/notion\";\nexport function Devices() {\n  const {\n    user,\n    lastSelectedDeviceId\n  } = useNotion();\n  const [devices, setDevices] = useState([]);\n  const [draftDeviceId, setDraftDeviceId] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n  useEffect(() => {\n    if (!user || submitting) {\n      return;\n    }\n    setLoading(true);\n    notion.getDevices().then(devices => {\n      setDevices(devices);\n      if (devices.length) {\n        setDraftDeviceId(lastSelectedDeviceId ? lastSelectedDeviceId : devices[0].deviceId);\n      }\n    }).catch(error => {\n      setError(error.message);\n    }).finally(() => {\n      setLoading(false);\n    });\n  }, [user, lastSelectedDeviceId, submitting]);\n  function onSubmit(event) {\n    event.preventDefault();\n    setSubmitting(true);\n    notion.selectDevice(devices => devices.find(device => device.deviceId === draftDeviceId)).then(() => {\n      navigate(\"/\");\n    }).catch(error => {\n      setError(error.message);\n    });\n  }\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    className: \"card login-form\",\n    onSubmit: onSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    className: \"card-heading\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }\n  }, \"Devices\"), !!error ? /*#__PURE__*/React.createElement(\"h4\", {\n    className: \"card-error\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 20\n    }\n  }, error) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Select a Device\"), /*#__PURE__*/React.createElement(\"select\", {\n    name: \"deviceSelect\",\n    value: draftDeviceId,\n    disabled: loading,\n    onChange: e => setDraftDeviceId(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, devices.map(device => /*#__PURE__*/React.createElement(\"option\", {\n    key: device.deviceId,\n    value: device.deviceId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 15\n    }\n  }, device.deviceNickname || device.modelName)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"card-btn\",\n    disabled: loading,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 11\n    }\n  }, loading ? \"Loading Devices...\" : \"Select\"))));\n}","map":{"version":3,"names":["React","useState","useEffect","navigate","notion","useNotion","Devices","user","lastSelectedDeviceId","devices","setDevices","draftDeviceId","setDraftDeviceId","loading","setLoading","submitting","setSubmitting","error","setError","getDevices","then","length","deviceId","catch","message","finally","onSubmit","event","preventDefault","selectDevice","find","device","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","name","value","disabled","onChange","e","target","map","key","deviceNickname","modelName","type"],"sources":["/Users/ludofederici/neurohackathon/src/pages/Devices.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\n\nimport { notion, useNotion } from \"../services/notion\";\n\nexport function Devices() {\n  const { user, lastSelectedDeviceId } = useNotion();\n  const [devices, setDevices] = useState([]);\n  const [draftDeviceId, setDraftDeviceId] = useState(\"\");\n  const [loading, setLoading] = useState(true);\n  const [submitting, setSubmitting] = useState(false);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    if (!user || submitting) {\n      return;\n    }\n\n    setLoading(true);\n\n    notion\n      .getDevices()\n      .then((devices) => {\n        setDevices(devices);\n        if (devices.length) {\n          setDraftDeviceId(\n            lastSelectedDeviceId\n              ? lastSelectedDeviceId\n              : devices[0].deviceId\n          );\n        }\n      })\n      .catch((error) => {\n        setError(error.message);\n      })\n      .finally(() => {\n        setLoading(false);\n      });\n  }, [user, lastSelectedDeviceId, submitting]);\n\n  function onSubmit(event) {\n    event.preventDefault();\n    setSubmitting(true);\n\n    notion\n      .selectDevice((devices) =>\n        devices.find((device) => device.deviceId === draftDeviceId)\n      )\n      .then(() => {\n        navigate(\"/\");\n      })\n      .catch((error) => {\n        setError(error.message);\n      });\n  }\n\n  return (\n    <main className=\"main-container\">\n      <form className=\"card login-form\" onSubmit={onSubmit}>\n        <h3 className=\"card-heading\">Devices</h3>\n        {!!error ? <h4 className=\"card-error\">{error}</h4> : null}\n        <div className=\"row\">\n          <label>Select a Device</label>\n          <select\n            name=\"deviceSelect\"\n            value={draftDeviceId}\n            disabled={loading}\n            onChange={(e) => setDraftDeviceId(e.target.value)}\n          >\n            {devices.map((device) => (\n              <option key={device.deviceId} value={device.deviceId}>\n                {device.deviceNickname || device.modelName}\n              </option>\n            ))}\n          </select>\n        </div>\n        <div className=\"row\">\n          <button type=\"submit\" className=\"card-btn\" disabled={loading}>\n            {loading ? \"Loading Devices...\" : \"Select\"}\n          </button>\n        </div>\n      </form>\n    </main>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}