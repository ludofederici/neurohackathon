{"ast":null,"code":"var _jsxFileName = \"/Users/ludofederici/neurohackathon/src/services/notion.js\";\nimport React, { useContext, createContext } from \"react\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Notion } from \"@neurosity/notion\";\nimport useLocalStorage from \"react-use/lib/useLocalStorage\";\nexport const notion = new Notion({\n  autoSelectDevice: false\n});\nconst initialState = {\n  selectedDevice: null,\n  status: null,\n  user: null,\n  loadingUser: true\n};\nexport const NotionContext = createContext();\nexport const useNotion = () => {\n  return useContext(NotionContext);\n};\nexport function ProvideNotion({\n  children\n}) {\n  const notionProvider = useProvideNotion();\n  return /*#__PURE__*/React.createElement(NotionContext.Provider, {\n    value: notionProvider,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, children);\n}\nfunction useProvideNotion() {\n  const [lastSelectedDeviceId, setLastSelectedDeviceId] = useLocalStorage(\"deviceId\");\n  const [state, setState] = useState({\n    ...initialState\n  });\n  const {\n    user,\n    selectedDevice\n  } = state;\n  const setSelectedDevice = useCallback(selectedDevice => {\n    setState(state => ({\n      ...state,\n      selectedDevice\n    }));\n  }, []);\n  useEffect(() => {\n    if (user && !selectedDevice) {\n      notion.selectDevice(devices => lastSelectedDeviceId ? devices.find(device => device.deviceId === lastSelectedDeviceId) : devices[0]);\n    }\n  }, [user, lastSelectedDeviceId, selectedDevice]);\n  useEffect(() => {\n    if (!selectedDevice) {\n      return;\n    }\n    const subscription = notion.status().subscribe(status => {\n      setState(state => ({\n        ...state,\n        status\n      }));\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [selectedDevice]);\n  useEffect(() => {\n    setState(state => ({\n      ...state,\n      loadingUser: true\n    }));\n    const subscription = notion.onAuthStateChanged().subscribe(user => {\n      setState(state => ({\n        ...state,\n        user,\n        loadingUser: false\n      }));\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n  useEffect(() => {\n    const sub = notion.onDeviceChange().subscribe(selectedDevice => {\n      setSelectedDevice(selectedDevice);\n      setLastSelectedDeviceId(selectedDevice.deviceId); // cache locally\n    });\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [setSelectedDevice, setLastSelectedDeviceId]);\n  const logoutNotion = useCallback(() => {\n    return new Promise(resolve => {\n      notion.logout().then(resolve);\n      setState({\n        ...initialState,\n        loadingUser: false\n      });\n    });\n  }, []);\n  return {\n    ...state,\n    lastSelectedDeviceId,\n    setLastSelectedDeviceId,\n    logoutNotion,\n    setSelectedDevice\n  };\n}","map":{"version":3,"names":["React","useContext","createContext","useState","useEffect","useCallback","Notion","useLocalStorage","notion","autoSelectDevice","initialState","selectedDevice","status","user","loadingUser","NotionContext","useNotion","ProvideNotion","children","notionProvider","useProvideNotion","createElement","Provider","value","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","lastSelectedDeviceId","setLastSelectedDeviceId","state","setState","setSelectedDevice","selectDevice","devices","find","device","deviceId","subscription","subscribe","unsubscribe","onAuthStateChanged","sub","onDeviceChange","logoutNotion","Promise","resolve","logout","then"],"sources":["/Users/ludofederici/neurohackathon/src/services/notion.js"],"sourcesContent":["import React, { useContext, createContext } from \"react\";\nimport { useState, useEffect, useCallback } from \"react\";\nimport { Notion } from \"@neurosity/notion\";\nimport useLocalStorage from \"react-use/lib/useLocalStorage\";\n\nexport const notion = new Notion({\n  autoSelectDevice: false\n});\n\nconst initialState = {\n  selectedDevice: null,\n  status: null,\n  user: null,\n  loadingUser: true\n};\n\nexport const NotionContext = createContext();\n\nexport const useNotion = () => {\n  return useContext(NotionContext);\n};\n\nexport function ProvideNotion({ children }) {\n  const notionProvider = useProvideNotion();\n\n  return (\n    <NotionContext.Provider value={notionProvider}>\n      {children}\n    </NotionContext.Provider>\n  );\n}\n\nfunction useProvideNotion() {\n  const [\n    lastSelectedDeviceId,\n    setLastSelectedDeviceId\n  ] = useLocalStorage(\"deviceId\");\n\n  const [state, setState] = useState({\n    ...initialState\n  });\n\n  const { user, selectedDevice } = state;\n\n  const setSelectedDevice = useCallback((selectedDevice) => {\n    setState((state) => ({\n      ...state,\n      selectedDevice\n    }));\n  }, []);\n\n  useEffect(() => {\n    if (user && !selectedDevice) {\n      notion.selectDevice((devices) =>\n        lastSelectedDeviceId\n          ? devices.find(\n              (device) => device.deviceId === lastSelectedDeviceId\n            )\n          : devices[0]\n      );\n    }\n  }, [user, lastSelectedDeviceId, selectedDevice]);\n\n  useEffect(() => {\n    if (!selectedDevice) {\n      return;\n    }\n\n    const subscription = notion.status().subscribe((status) => {\n      setState((state) => ({ ...state, status }));\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [selectedDevice]);\n\n  useEffect(() => {\n    setState((state) => ({ ...state, loadingUser: true }));\n\n    const subscription = notion\n      .onAuthStateChanged()\n      .subscribe((user) => {\n        setState((state) => ({\n          ...state,\n          user,\n          loadingUser: false\n        }));\n      });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, []);\n\n  useEffect(() => {\n    const sub = notion.onDeviceChange().subscribe((selectedDevice) => {\n      setSelectedDevice(selectedDevice);\n      setLastSelectedDeviceId(selectedDevice.deviceId); // cache locally\n    });\n\n    return () => {\n      sub.unsubscribe();\n    };\n  }, [setSelectedDevice, setLastSelectedDeviceId]);\n\n  const logoutNotion = useCallback(() => {\n    return new Promise((resolve) => {\n      notion.logout().then(resolve);\n      setState({ ...initialState, loadingUser: false });\n    });\n  }, []);\n\n  return {\n    ...state,\n    lastSelectedDeviceId,\n    setLastSelectedDeviceId,\n    logoutNotion,\n    setSelectedDevice\n  };\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}