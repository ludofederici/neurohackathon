{"ast":null,"code":"var _jsxFileName = \"/Users/ludofederici/neurohackathon/src/pages/Focus.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\nimport { notion, useNotion } from \"../services/notion\";\nimport { Nav } from \"../components/Nav\";\nexport function Focus() {\n  const {\n    user\n  } = useNotion();\n  const [focus, setFocus] = useState(0);\n  const [color, setColor] = useState('');\n  const [focusScores, setFocusScores] = useState([]); // Step 1: Initialize state for focus scores list\n\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/login\");\n    }\n  }, [user]);\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n    const subscription = notion.focus().subscribe(focus => {\n      const focusScore = Math.trunc(focus.probability * 100);\n      setFocus(focusScore);\n\n      // Append the new focus score to the focusScores list\n      setFocusScores(prevScores => [...prevScores, focusScore]);\n\n      // Step 1: Create a function to calculate the average of an array\n      function calculateAverage(array) {\n        const sum = array.reduce((a, b) => a + b, 0);\n        return sum / array.length;\n      }\n\n      // In your component\n      // Step 2: Use the slice method to get the last 20 scores from the focusScores array\n      const last20Scores = focusScores.slice(Math.max(focusScores.length - 20, 0));\n      if (focusScore < 30) {\n        setColor('red');\n      } else {\n        setColor('green');\n      }\n    });\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [user]);\n  return /*#__PURE__*/React.createElement(\"main\", {\n    className: \"main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 5\n    }\n  }, user ? /*#__PURE__*/React.createElement(Nav, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 15\n    }\n  }) : null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-score\",\n    style: {\n      borderColor: color\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }\n  }, \"\\xA0\", focus, \"% \", /*#__PURE__*/React.createElement(\"div\", {\n    className: \"metric-word\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 24\n    }\n  }, \"Focus\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"focus-scores-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Focus Scores History\"), /*#__PURE__*/React.createElement(\"ul\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, focusScores.map((score, index) => /*#__PURE__*/React.createElement(\"li\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, score, \"%\")))));\n}","map":{"version":3,"names":["React","useState","useEffect","navigate","notion","useNotion","Nav","Focus","user","focus","setFocus","color","setColor","focusScores","setFocusScores","subscription","subscribe","focusScore","Math","trunc","probability","prevScores","calculateAverage","array","sum","reduce","a","b","length","last20Scores","slice","max","unsubscribe","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","borderColor","map","score","index","key"],"sources":["/Users/ludofederici/neurohackathon/src/pages/Focus.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { navigate } from \"@reach/router\";\n\nimport { notion, useNotion } from \"../services/notion\";\nimport { Nav } from \"../components/Nav\";\n\nexport function Focus() {\n  const { user } = useNotion();\n  const [focus, setFocus] = useState(0);\n  const [color, setColor] = useState('');\n  const [focusScores, setFocusScores] = useState([]); // Step 1: Initialize state for focus scores list\n\n  useEffect(() => {\n    if (!user) {\n      navigate(\"/login\");\n    }\n  }, [user]);\n\n  useEffect(() => {\n    if (!user) {\n      return;\n    }\n\n    const subscription = notion.focus().subscribe((focus) => {\n      const focusScore = Math.trunc(focus.probability * 100);\n      setFocus(focusScore);\n\n      // Append the new focus score to the focusScores list\n      setFocusScores((prevScores) => [...prevScores, focusScore]);\n\n      // Step 1: Create a function to calculate the average of an array\nfunction calculateAverage(array) {\n  const sum = array.reduce((a, b) => a + b, 0);\n  return sum / array.length;\n}\n\n// In your component\n// Step 2: Use the slice method to get the last 20 scores from the focusScores array\nconst last20Scores = focusScores.slice(Math.max(focusScores.length - 20, 0));\n\n      if (focusScore < 30) {\n        setColor('red');\n      } else {\n        setColor('green');\n      }\n    });\n\n    return () => {\n      subscription.unsubscribe();\n    };\n  }, [user]);\n\n  return (\n    <main className=\"main-container\">\n      {user ? <Nav /> : null}\n      <div className=\"metric-score\" style={{ borderColor: color }}>\n        &nbsp;{focus}% <div className=\"metric-word\">Focus</div>\n      </div>\n      {/* Display the list of focus scores */}\n      <div className=\"focus-scores-list\">\n        <h3>Focus Scores History</h3>\n        <ul>\n          {focusScores.map((score, index) => (\n            <li key={index}>{score}%</li>\n          ))}\n        </ul>\n      </div>\n    </main>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}